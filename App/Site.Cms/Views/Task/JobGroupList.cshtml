@{
    ViewBag.Title = "工作分组管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<environment>
    <link href="~/style/css/table.css" rel="stylesheet" />
    <link href="~/scripts/ztree/skin.css" rel="stylesheet" />
    <link href="~/style/css/jquery.splitter.css" rel="stylesheet" />
</environment>

<div id="page-body">
    <div id="page-body-inner">
        <div class="split-vertical-container" data-position="15%" data-splitlimit="50,50">
            <div class="split-vertical-left">
                <div class="content-panel">
                    <div class="content-panel-head default h-50 bd-lw-0 bd-tw-0 txt-center lh-50">
                        <button type="button" id="btn_addlevelone" class="btn btn-primary"><i class="icon-plus"></i> 添加分组</button>
                        <button type="button" id="btn_deleteselect" class="btn btn-danger"><i class="icon-trash"></i> 删除选中</button>
                    </div>
                    <div class="content-panel-body">
                        <div class="content-panel-body-inner">
                            <ul id="all_tree" class="ztree"></ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="split-vertical-right">
                <div class="content-panel fiterhide" id="jobgroup_detail">
                    <div class="content-panel-head">
                        <table cellpadding="0" cellspacing="0" class="detail-table">
                            <tr>
                                <td class="detail-td-tit">名称</td>
                                <td class="detail-td-content" id="content-for-Name"></td>
                            </tr>
                            <tr>
                                <td></td>
                                <td class="detail-td-content"><button type="button" class="btn btn-primary" id="btn_edit"><i class="icon-edit"></i> 编辑</button></td>
                            </tr>
                        </table>
                    </div>
                    <div class="content-panel-body">
                        <div class="content-panel-body-inner content-panel">
                            <ul class="nav nav-tabs content-panel-head" id="myTab" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">工作任务</a>
                                </li>
                            </ul>
                            <div class="tab-content content-panel-body" id="myTabContent">
                                <div class="tab-pane show active content-panel" id="home" role="tabpanel">
                                    <div class="content-panel-head">
                                        <div class="row pd-10 mg-0">
                                            <div class="lis_search pd-0">
                                                <div class="form-group mg-0">
                                                    <input type="text" class="form-control w-200" id="search_jobname" placeholder="任务名称">
                                                    <button type="button" class="btn btn-info" onclick="LoadJobs()"><i class="icon-search"></i>搜索</button>
                                                    <button type="button" id="btn_addjob" class="btn btn-primary"><i class="icon-plus"></i> 添加任务</button>
                                                    <button type="button" id="btn_delselectjob" class="btn btn-danger"><i class="icon-trash"></i> 删除选中</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="content-panel-body">
                                        <table id="job_table" class="datagrid-table wp-100" cellspacing="0" cellpadding="0"></table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script src="~/scripts/table/jquery.dataTables.min.js"></script>
    <script src="~/scripts/table/dataTables.fixedColumns.min.js"></script>
    <script src="~/scripts/jq/jquery.splitter.js"></script>
    <script src="~/scripts/ztree/jquery.ztree.all.js"></script>
    <script src="~/scripts/ztree/jquery.ztree.exhide.js"></script>
    <script type="text/javascript">
        var selectTree = null;
        var changeSortUrl = '@Url.Action("ChangeJobGroupSort", "Task")';
        var deleteUrl = '@Url.Action("DeleteJobGroup", "Task")';
        var loadingIcoUrl = '/scripts/ztree/img/loading.gif';
        var allJobGroups = {};
        var allNodes = [];
        var nowJobGroup = null;
        var seetings = {
            view: {
                nameIsHTML: true,
            },
            callback: {
                onClick: AllJobGroupNodeClick,
                beforeDrag: beforeDrag,
                beforeDrop: beforeDrop,
                beforeExpand: BeforeExpand,
            },
            check: {
                enable: true,
                chkboxType: { "Y": "", "N": "" }
            },
            edit: {
                enable: true,
                showRemoveBtn: false,
                showRenameBtn: false,
                drag: {
                    isMove: true,
                    inner: false,
                    prev: true,
                    next: true
                }
            }
        };
        $(function () {
            InitData();

            //任务表格
            InitDataTable({
                TableEle: '#job_table',
                "columnDefs": [
                    {
                        "title": '<div class="checkbox-style cbx_all"></div>', "targets": 0, "data": function (row, type, val, meta) {
                            return '<div class="checkbox-style cbx_val" data-val="' + row.Id + '"></div>';
                        }, width: '20px', className: 'txt-center'
                    },
                    { "title": "名称", "targets": 1, "data": 'Name' },
                    {
                        "title": "类型", "targets": 2, "data":'TypeName', width: '100px', className: 'txt-center'
                    },
                    {
                        "title": "状态", "targets": 3, "data":'StateName', width: '100px', className: 'txt-center'
                    },
                    {
                        "title": "操作", "targets": 4, "data": function (row, type, val, meta) {
                            var menuItems = new Array();
                            menuItems.push('<li><a href="javascript:void(0)" class="btn_jobdetail dropdown-item" sysno="_sysno" jobname="_jobname"><i class="icon-list-alt"></i> 详情</a></li>'.replace('_sysno', row.Id).replace('_jobname', row.Name));
                            return '<div class="btn-group"><button type="button" class="btn btn-sm btn-primary dropdown-toggle w-62" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">管理 <span class="caret"></span></button><ul class="dropdown-menu list-dropdown-menu" style="width:62px">' + menuItems.join('') + '</ul></div>';
                        }, width: '62px', className: 'txt-center'
                    },
                ]
            });

            //添加工作分组
            $("#btn_addlevelone").click(function () {

                OpenDialogPage({
                    title: '添加工作分组',
                    url: '@Url.Action("EditJobGroup", "Task")',
                    width: '600px',
                    height:'400px'
                });
            });
            //编辑工作分组
            $("#btn_edit").click(function () {
                if (!nowJobGroup) {
                    return;
                }
                var editUrl = '@Url.Action("EditJobGroup", "Task",new { code="_id"})'.replace('_id',nowJobGroup.Code);
                OpenDialogPage({
                    title: '编辑工作分组',
                    url: editUrl,
                    width: '600px',
                    height: '400px'
                });
            });

            //删除
            $("#btn_deleteselect").click(function () {
                var checkNodes = $.fn.zTree.getZTreeObj("all_tree").getCheckedNodes(true);
                var codeArray = new Array();
                for (var i = 0; i < checkNodes.length; i++) {
                    codeArray.push(checkNodes[i].id);
                }
                DeleteJobGroup(codeArray);
            });

            //创建工作任务
            $("#btn_addjob").click(function () {
                OpenEditJobPage('@Url.Action("EditJob","Task",new { preGroupId = "_gpid"})'.replace('_gpid',nowJobGroup.Code), '添加工作任务');
            });

            //删除工作任务
            $("body").on("click", ".btn_jobdelete", function () {
                var sysNo = $(this).attr("sysno");
                DeleteJob([sysNo]);
            });

            //删除选中任务
            $("#btn_delselectjob").click(function () {
                var checkedValues = GetSelectJobs();
                if (!checkedValues || checkedValues.length <= 0) {
                    ErrorMsg("还没有选择要删除的信息");
                    return;
                }
                DeleteJob(checkedValues);
            });
            //任务详情
            $("body").on("click", ".btn_jobdetail", function () {
                var sysNo = $.trim($(this).attr("sysno"));
                if (sysNo == "") {
                    return;
                }
                var editUrl = '@Url.Action("JobDetail", "Task", new { Id="sys_no"})'.replace('sys_no', sysNo);
                OpenEditJobPage(editUrl, '任务详情');
            });
        });

        //初始化数据
        function InitData() {
            $.post('@Url.Action("GetJobGroupValue", "Task")', function (res) {
                if (!res) {
                    return;
                }
                if (res.AllJobGroup) {
                    allJobGroups = JSON.parse(res.AllJobGroup);
                }
                if (res.AllNodes) {
                    allNodes = JSON.parse(res.AllNodes);
                    InitAllJobGroupTree();
                }
            });
        }

        //初始化所有工作分组数据
        function InitAllJobGroupTree() {
            $.fn.zTree.init($("#all_tree"), seetings, allNodes);
        }

        //展开加载数据
        function BeforeExpand(treeId, treeNode){
                if(!treeNode||treeNode.loadData){
                    return true;
                }
                var zTree=$.fn.zTree.getZTreeObj(treeId);
                treeNode.icon = loadingIcoUrl;
                zTree.updateNode(treeNode);
                $.post('@Url.Action("LoadChildJobGroups","Task")',{parentId:treeNode.id},function(res){
                    if(!res){
                        return;
                    }
                    var childNodes=JSON.parse(res.ChildNodes);
                    zTree.addNodes(treeNode, -1, childNodes);
                    treeNode.loadData = true;
                    treeNode.icon = "";
                    zTree.updateNode(treeNode);
                    zTree.expandNode(treeNode,true);
                    var childJobGroups = JSON.parse(res.JobGroupData);
                    for (var c in childJobGroups){
                        allJobGroups[c] = childJobGroups[c];
                    }
                });
                return false;
        }

        //拖拽之前事件
        function beforeDrag(treeId, treeNodes) {
            for (var i = 0, l = treeNodes.length; i < l; i++) {
                if (treeNodes[i].drag === false) {
                    return false;
                }
            }
            return true;
        }
        //拖拽事件
        function beforeDrop(treeId, treeNodes, targetNode, moveType) {
            if (!treeNodes || !targetNode || treeNodes.length <= 0) {
                return false;
            }
            var firstNode = treeNodes[0];
            return MoveNode(firstNode, targetNode, moveType);
        }

        //移动节点
        function MoveNode(treeNode, targetNode, moveType) {
            if (treeNode.tId == targetNode.tId) {
                return false;
            }
            var sort = 0;
            if (moveType == "inner") {
                if (targetNode.tId != treeNode.parentTId) {
                    return false;
                }
                sort = 1;
            } else {
                if (treeNode.parentTId != targetNode.parentTId) {
                    return false;
                }
                var targetId = targetNode.id;
                var targetJobGroup = allJobGroups[targetId];
                if (!targetJobGroup) {
                    return false;
                }
                sort = moveType == "prev" ? targetJobGroup.Sort : targetJobGroup.Sort + 1;
            }
            var nowId = treeNode.id;
            $.post(changeSortUrl, { code: nowId, sort: sort }, function (res) {
                if (res.Success) {
                }
            })
            $.fn.zTree.getZTreeObj("all_tree").moveNode(targetNode, treeNode, moveType, true);
            return false;
        }

        //节点点击
        function AllJobGroupNodeClick(event, treeId, treeNode) {
            nowJobGroup = allJobGroups[treeNode.id];
            if (!nowJobGroup) {
                return;
            }
            $('#content-for-Code').text(nowJobGroup.Code);
            $('#content-for-Name').text(nowJobGroup.Name);
            $('#content-for-Sort').text(nowJobGroup.Sort);
            $('#content-for-Parent').text(nowJobGroup.Parent);
            $('#content-for-Root').text(nowJobGroup.Root);
            $('#content-for-Level').text(nowJobGroup.Level);
            $('#content-for-Remark').text(nowJobGroup.Remark);
            $("#jobgroup_detail").removeClass('fiterhide');
            LoadJobs();
            ResetData();
            $(window).resize();
        }

        //删除工作分组
        function DeleteJobGroup(codes) {
            if (!codes || codes.length<=0) {
                ErrorMsg("没有选择要删除的工作分组信息");
                return;
            }
            ConfirmMsg('删除工作分组将同时删除该工作分组下的所有子工作分组,确认删除吗?', function (res) {
                $.post(deleteUrl, { codes: codes }, function (res) {
                    ResultMsg(res);
                    if (res.Success) {
                        var allJobGroupTree = $.fn.zTree.getZTreeObj("all_tree");
                        var checkNodes = allJobGroupTree.getCheckedNodes(true);
                        for (var n in checkNodes) {
                            var nowNode = checkNodes[n];
                            allJobGroupTree.removeNode(nowNode);
                            if (nowJobGroup && nowJobGroup.Code == nowNode.id) {
                                ResetDetailPage();
                            }
                        }
                    }
                });
            });
        }

        //重置详情数据
        function ResetDetailPage() {
            ResetData();
            $("#jobgroup_detail").addClass("fiterhide");
        }

        //重置数据
        function ResetData() {
        }

        //加载任务信息
        function LoadJobs(){
            if (!nowJobGroup){
                return;
            }
            $("#job_tabe_page_list").html("");
            var loadUrl='@Url.Action("GetGroupJobs", "Task")';
            $.post(loadUrl, { groupId: nowJobGroup.Code,key:$.trim($("#search_jobname").val())},function(res){
                ReplaceDataTableData("#job_table",JSON.parse(res.Datas));
                $(window).resize();
                InitDataTableChecked("#job_table");
            });
        }

         //打开工作任务编辑页面
        function OpenEditJobPage(url, tit) {
            if (!url || $.trim(url) == "") {
                return;
            }
            window.top.OpenPage({
                url: url,
                title: tit
            });
        }

        //删除工作任务
        function DeleteJob(sysNos) {
            if (!sysNos || sysNos == "") {
                return;
            }
            ConfirmMsg('确认删除工作任务吗?', function () {
                $.post('@Url.Action("DeleteJob","Task")', { jobIds: sysNos }, function (res) {
                    ResultMsg(res);
                    if (res.Success) {
                        LoadJobs();
                    }
                });
            });
        };
        //获取选中的任务
        function GetSelectJobs() {
            return GetDataTableCheckedValues('#job_table');
        }

    </script>

}

