@{
    ViewBag.Title = "任务执行计划选择";
}
@using EZNEW.CTask;
@using EZNEW.Framework.Extension;
@using EZNEW.Framework.Serialize;
@{
    var triggerTypeValues = TaskTriggerType.简单.GetType().GetEnumValueAndNames();
    var triggerStatusValues = TaskTriggerStatus.停止.GetType().GetEnumValueAndNames();
    var triggerApplyValues = TaskTriggerApplyTo.服务.GetType().GetEnumValueAndNames();
}
<environment>
    <link href="~/style/css/table.css" rel="stylesheet" />
</environment>
<div id="page-body">
    <div id="page-body-inner" class="content-panel">
        <ul class="nav nav-tabs bd-tw-0 content-panel-head" id="myTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">执行计划列表</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">已选执行计划</a>
            </li>
        </ul>
        <div class="tab-content content-panel-body" id="myTabContent">
            <div class="tab-pane show active content-panel" id="home" role="tabpanel" aria-labelledby="home-tab">
                <div class="content-panel-head lis_search pd-10">
                    <div class="form-group mg-0">
                        <label class="col-form-label">计划名称</label>
                        <input type="text" class="form-control" id="search_Name" name="search_Name">
                        <button type="button" class="btn btn-info" id="search_btn"><i class="icon-search"></i> 搜索</button>
                    </div>
                </div>
                <div class="content-panel-body">
                    <table id="trigger_table" class="datagrid-table wp-100" cellspacing="0" cellpadding="0"></table>
                </div>
                <div class="content-panel-foot fs-12 pdt-10 pdb-10 bd-t-e6e6e6 pdl-10" id="tab_pager">
                </div>
            </div>
            <div class="tab-pane content-panel" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                <div class="content-panel-head pd-10">
                    <button class="btn btn-sm btn-danger" id="btn_cacheallselected"><i class="icon-remove"></i> 取消全部</button>
                </div>
                <div class="content-panel-body">
                    <table id="selected_trigger_table" class="datagrid-table wp-100" cellspacing="0" cellpadding="0"></table>
                </div>
            </div>
        </div>

    </div>
</div>
@section Scripts
    {
    <environment>
        <script src="~/scripts/table/jquery.dataTables.min.js"></script>
        <script src="~/scripts/table/dataTables.fixedColumns.min.js"></script>
    </environment>
    <script type="text/javascript">
        var selectData = new Object();
        var selectObjects = new Array();
        var sysNos = '';
        var allDatas = new Object();
        var triggerStatusDict = new Object();
        var triggerApplyDict = new Object();
        var triggerTypeDict = new Object();
    var searchData = {};
        $(function () {
            triggerStatusDict=JSON.parse('@Html.Raw(JsonSerialize.ObjectToJson(triggerStatusValues))');
            triggerApplyDict=JSON.parse('@Html.Raw(JsonSerialize.ObjectToJson(triggerApplyValues))');
            triggerTypeDict=JSON.parse('@Html.Raw(JsonSerialize.ObjectToJson(triggerTypeValues))');

            //初始化数据表
            var columnConfigs = new Array();
            var selectColumnConfigs = new Array();
            var nameConfigItem={ "title":'名称', "targets": 0,"data":'Name',"className":'','render':null };
            columnConfigs.push(nameConfigItem);
            selectColumnConfigs.push(nameConfigItem);
            var typeConfigItem = {
                "title": '执行策略', "targets": 1, "width": '100px', "className": 'txt-center', 'data': function (row, type, val, meta) {
                    return triggerTypeDict[row.Type];
                } };
            columnConfigs.push(typeConfigItem);
            selectColumnConfigs.push(typeConfigItem);
            var applyConfigItem = {
                "title": '应用到对象', "targets": 2, "width": '100px', "className": 'txt-center', 'data': function (row, type, val, meta) {
                    return triggerApplyDict[row.ApplyTo];
                } };
            columnConfigs.push(applyConfigItem);
            selectColumnConfigs.push(applyConfigItem);
            var statusConfigItem = {
                "title": '状态', "targets": 3, "width": '100px', "className": 'txt-center', 'data': function (row, type, val, meta) {
                    return triggerStatusDict[row.Status];
                } };
            columnConfigs.push(statusConfigItem);
            selectColumnConfigs.push(statusConfigItem);
            columnConfigs.push({
                "title": "操作", "targets": 4, "data": function (row, type, val, meta) {
                    return '<button type="button" data-value="' + row.Id +'" class="btn btn-sm btn-success btn_select">选择</button>';
                }, width: '50px', className: 'txt-center'
            });
            selectColumnConfigs.push({
                "title": "操作", "targets": 4, "data": function (row, type, val, meta) {
                    return '<button type="button" data-value="' + row.Id + '" class="btn btn-sm btn-danger btn_cancel">取消</button>';
                }, width: '50px', className: 'txt-center'
            });
            InitDataTable({
                TableEle: '#trigger_table',
                columnDefs: columnConfigs,
                callback: function () {
                    Search();
                }
            });
            InitDataTable({
                TableEle: '#selected_trigger_table',
                "columnDefs": selectColumnConfigs
            });

            //搜索事件
            $("#search_btn").click(function () {
                Search();
            });
            //选择数据
            $("body").on("click", ".btn_select", function () {
                var btn = $(this);
                SelectValue(btn);
            });
            //取消选择
            $("body").on("click", ".btn_cancel", function () {
                var btn = $(this);
                var id = $.trim(btn.attr("data-value"));
                DeleteSelectValue(id);
            });
            //删除选择
            $("body").on("click", ".btn_delete", function () {
                var btn = $(this);
                var id = $.trim(btn.attr("data-value"));
                DeleteSelectValue(id);
            });
            //删除所有选中
            $("#btn_cacheallselected").click(function () {
                for (var s in selectData) {
                    DeleteSelectValue(s);
                }
            });
        })

        //搜索数据
        function Search() {
            var data = {};
            var name = $.trim($("#search_Name").val());
            data.Name = name;
            PageSearch({
                url: '@Url.Action("TriggerMultipleSelectSearch", "Task")',
                data: data,
                listEle:'#trigger_table',
                pagerEle: "#tab_pager",
                selectPage: true,
                callback: InitSelect
            });
        }

        //返回选中的数据
        function ConfirmSelect() {
            DialogOpener().TriggerMultiSelectCallback(selectObjects);
            return true;
        }

        //选择数据
        function SelectValue(btn) {
            if (!btn || !allDatas) {
                return;
            }
            var id = $.trim(btn.attr("data-value"));
            if (id == "") {
                return;
            }
            btn.removeClass("btn_select").removeClass("btn-success").addClass("btn_cancel").addClass("btn-danger").html("取消");
            if (!selectData[id]) {
                var nowProObj = allDatas[id];
                if (!nowProObj) {
                    return;
                }
                AddDataTableData("#selected_trigger_table",[nowProObj]);
                selectData[id] = true;
                selectObjects.push(nowProObj);
            }
        }

        //删除选择
        function DeleteSelectValue(id) {
            if (!id || id == "") {
                return;
            }
            if (!selectData[id]) {
                return;
            }
            selectData[id] = false;
            for (var d in selectObjects) {
                if (selectObjects[d].Id == id) {
                    selectObjects.splice(d, 1);
                    break;
                }
            }
            var btn = $('.btn_cancel[data-value="' + id + '"]');
            if (btn.length > 0) {
                btn.removeClass("btn_cancel").removeClass("btn-danger").addClass("btn_select").addClass("btn-success").html("选择");
            }
            ReplaceDataTableData("#selected_trigger_table",selectObjects);
        }

        //初始化信息
        function InitSelect(datas) {
            if (datas) {
                for (var p in datas) {
                    var data = datas[p];
                    allDatas[data.Id] = data;
                }
            }
            if (!selectData) {
                return;
            }
            for (var id in selectData) {
                if (!selectData[id]) {
                    continue;
                }
                $('.btn_select[data-value="' + id + '"]').each(function(i,e){
                    SelectValue($(e));
                });
            }
        }

        function ArtEvent() {
            return ConfirmSelect();

        }
    </script>

}
